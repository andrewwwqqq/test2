/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/assets/js/app.js":
/*!******************************!*\
  !*** ./src/assets/js/app.js ***!
  \******************************/
/***/ (function() {

eval("// swiper intro\r\nconst introSwiper = new Swiper('.intro__swiper-main', {\r\n\teffect: 'fade', // Эффект затухания\r\n\r\n\tpagination: {\r\n\t\tel: '.intro__swiper-pagination',\r\n\t\tclickable: true,\r\n\t},\r\n\tfadeEffect: {\r\n\t\tcrossFade: true, // Плавное затухание\r\n\t},\r\n\tloop: true,\r\n\tspaceBetween: 10,\r\n\r\n\twatchSlidesProgress: true,\r\n})\r\n\r\nintroSwiper.on('slideChange', function () {\r\n\t// Удаляем класс `swiper-pagination-bullet-active-paused` при смене слайда\r\n\tdocument\r\n\t\t.querySelector('.intro__swiper-pagination')\r\n\t\t.querySelectorAll('.swiper-pagination-bullet-active-paused')\r\n\t\t.forEach(pausedEl => {\r\n\t\t\tpausedEl.classList.remove('swiper-pagination-bullet-active-paused')\r\n\t\t})\r\n\r\n\tconst progressBar = document\r\n\t\t.querySelector('.intro__swiper-pagination')\r\n\t\t.querySelector('.swiper-pagination-bullet-active')\r\n\r\n\tif (!progressBar) return\r\n\r\n\tprogressBar.addEventListener('animationend', myEndFunction)\r\n\r\n\t// Retrigger Animation on Slide Change\r\n\r\n\tfunction myEndFunction() {\r\n\t\tintroSwiper.slideNext()\r\n\t}\r\n\r\n\t// Перезапуск анимации на новом слайде\r\n\tprogressBar.style.animation = 'none'\r\n\tvoid progressBar.offsetWidth // Триггер Reflow\r\n\tprogressBar.style.animation = null\r\n\r\n\t// Если мышь находится над `.intro__swiper`, ставим анимацию на паузу\r\n\tif (introIsMouseOverSwiper) {\r\n\t\tprogressBar.style.animationPlayState = 'paused'\r\n\t\tprogressBar.classList.add('swiper-pagination-bullet-active-paused')\r\n\t} else {\r\n\t\tprogressBar.style.animationPlayState = 'running'\r\n\t}\r\n})\r\n\r\n// Флаг для отслеживания состояния мыши\r\nlet introIsMouseOverSwiper = false\r\n\r\n// Наведение мыши на `.intro__swiper`\r\ndocument.querySelectorAll('.intro__swiper-main').forEach(item => {\r\n\titem.addEventListener('mouseenter', function () {\r\n\t\tintroIsMouseOverSwiper = true\r\n\r\n\t\tconst progressBar = document\r\n\t\t\t.querySelector('.intro__swiper-pagination')\r\n\t\t\t.querySelector('.swiper-pagination-bullet-active')\r\n\r\n\t\tif (progressBar) {\r\n\t\t\tprogressBar.style.animationPlayState = 'paused'\r\n\t\t\tprogressBar.classList.add('swiper-pagination-bullet-active-paused')\r\n\t\t}\r\n\t})\r\n\r\n\t// Убираем мышь с `.intro__swiper`\r\n\titem.addEventListener('mouseleave', function () {\r\n\t\tintroIsMouseOverSwiper = false\r\n\r\n\t\tconst progressBar = document\r\n\t\t\t.querySelector('.intro__swiper-pagination')\r\n\t\t\t.querySelector('.swiper-pagination-bullet-active')\r\n\r\n\t\tif (progressBar) {\r\n\t\t\tprogressBar.style.animationPlayState = 'running'\r\n\t\t\tprogressBar.classList.remove('swiper-pagination-bullet-active-paused')\r\n\t\t}\r\n\t})\r\n})\r\n\r\n// dropdown hover\r\nconst dropdowns = document.querySelectorAll('.header__dropdown')\r\n\r\n// Перебираем все dropdown элементы\r\ndropdowns.forEach(dropdown => {\r\n\tconst dropdownContent = dropdown.querySelector('.header__dropdown-content')\r\n\tconst dropdownTop = dropdown.querySelector('.header__dropdown-top')\r\n\r\n\t// Добавляем класс visible при наведении на dropdown-top\r\n\tdropdownTop.addEventListener('mouseover', () => {\r\n\t\tdropdownContent.classList.add('visible')\r\n\t\tdropdownContent.style.zIndex = '1' // Устанавливаем z-index сразу\r\n\t})\r\n\r\n\t// Убираем класс visible при уходе курсора с dropdown\r\n\tdropdown.addEventListener('mouseleave', () => {\r\n\t\tdropdownContent.classList.remove('visible')\r\n\r\n\t\t// Ожидаем 0.5 секунды перед изменением z-index\r\n\t\tsetTimeout(() => {\r\n\t\t\tdropdownContent.style.zIndex = '-1'\r\n\t\t}, 300) // 500 миллисекунд\r\n\t})\r\n})\r\n\r\n// burger dropdown\r\nconst burgerDropdowns = document.querySelectorAll('.burger-menu__dropdown')\r\n\r\n// Перебираем все dropdown элементы\r\nburgerDropdowns.forEach(dropdown => {\r\n\tconst dropdownContent = dropdown.querySelector(\r\n\t\t'.burger-menu__dropdown-content'\r\n\t)\r\n\tconst dropdownTop = dropdown.querySelector('.burger-menu__dropdown-top')\r\n\r\n\t// Добавляем класс visible при наведении на dropdown-top\r\n\t// dropdownTop.addEventListener('click', () => {\r\n\t// \tif (!dropdownContent.classList.contains('visible')) {\r\n\t// \t\tdropdownContent.classList.add('visible')\r\n\t// \t\tdropdownContent.style.zIndex = '1' // Устанавливаем z-index сразу\r\n\t// \t\tdropdownTop.classList.add('burger-menu__dropdown-top--active')\r\n\t// \t} else {\r\n\t// \t\t// Убираем класс visible при уходе курсора с dropdown\r\n\t// \t\tdropdownContent.classList.remove('visible')\r\n\t// \t\tdropdownTop.classList.remove('burger-menu__dropdown-top--active')\r\n\r\n\t// \t\t// Ожидаем 0.5 секунды перед изменением z-index\r\n\t// \t\tsetTimeout(() => {\r\n\t// \t\t\tdropdownContent.style.zIndex = '-1'\r\n\t// \t\t}, 300) // 500 миллисекунд\r\n\t// \t}\r\n\t// })\r\n\r\n\tdropdownTop.addEventListener('mouseover', () => {\r\n\t\tdropdownContent.classList.add('visible')\r\n\t\tdropdownContent.style.zIndex = '1' // Устанавливаем z-index сразу\r\n\t})\r\n\r\n\t//  Убираем класс visible при уходе курсора с dropdown\r\n\tdropdown.addEventListener('mouseleave', () => {\r\n\t\tdropdownContent.classList.remove('visible')\r\n\r\n\t\t// Ожидаем 0.5 секунды перед изменением z-index\r\n\t\tsetTimeout(() => {\r\n\t\t\tdropdownContent.style.zIndex = '-1'\r\n\t\t}, 300) // 500 миллисекунд\r\n\t})\r\n})\r\n\r\n// cloud swiper\r\nconst cloudSwiper = new Swiper('.cloud__swiper', {\r\n\t// slidesPerView: 1.4, // Можно оставить несколько слайдов видимыми\r\n\t// centeredSlides: true,\r\n\r\n\tslidesPerView: 1, // Можно оставить несколько слайдов видимыми\r\n\tloop: true, // Цикличная прокрутка\r\n\tpagination: {\r\n\t\tel: '.cloud__swiper-pagination', // Элемент для пагинации\r\n\t\tclickable: true, // Пагинация кликабельна\r\n\t},\r\n\tnavigation: {\r\n\t\tnextEl: '.cloud__swiper-button-next', // Кнопка \"вперёд\"\r\n\t\tprevEl: '.cloud__swiper-button-prev', // Кнопка \"назад\"\r\n\t},\r\n\tcenteredSlides: true,\r\n\r\n\twatchSlidesProgress: true,\r\n\r\n\tbreakpoints: {\r\n\t\t576: {\r\n\t\t\tslidesPerView: 1.4,\r\n\t\t},\r\n\t},\r\n})\r\n\r\ncloudSwiper.on('slideChange', function () {\r\n\t// Удаляем класс `swiper-pagination-bullet-active-paused` при смене слайда\r\n\tdocument\r\n\t\t.querySelector('.cloud__swiper-pagination')\r\n\t\t.querySelectorAll('.swiper-pagination-bullet-active-paused')\r\n\t\t.forEach(pausedEl => {\r\n\t\t\tpausedEl.classList.remove('swiper-pagination-bullet-active-paused')\r\n\t\t})\r\n\r\n\tconst progressBar = document\r\n\t\t.querySelector('.cloud__swiper-pagination')\r\n\t\t.querySelector('.swiper-pagination-bullet-active')\r\n\r\n\tif (!progressBar) return\r\n\r\n\tprogressBar.addEventListener('animationend', myEndFunction)\r\n\r\n\t// Retrigger Animation on Slide Change\r\n\r\n\tfunction myEndFunction() {\r\n\t\tcloudSwiper.slideNext()\r\n\t}\r\n\r\n\t// Перезапуск анимации на новом слайде\r\n\tprogressBar.style.animation = 'none'\r\n\tvoid progressBar.offsetWidth // Триггер Reflow\r\n\tprogressBar.style.animation = null\r\n\r\n\t// Если мышь находится над `.cloud__swiper`, ставим анимацию на паузу\r\n\tif (cloudeIsMouseOverSwiper) {\r\n\t\tprogressBar.style.animationPlayState = 'paused'\r\n\t\tprogressBar.classList.add('swiper-pagination-bullet-active-paused')\r\n\t} else {\r\n\t\tprogressBar.style.animationPlayState = 'running'\r\n\t}\r\n})\r\n\r\n// Флаг для отслеживания состояния мыши\r\nlet cloudeIsMouseOverSwiper = false\r\n\r\n// Наведение мыши на `.cloud__swiper`\r\ndocument.querySelectorAll('.cloud__swiper').forEach(item => {\r\n\titem.addEventListener('mouseenter', function () {\r\n\t\tcloudeIsMouseOverSwiper = true\r\n\r\n\t\tconst progressBar = document\r\n\t\t\t.querySelector('.cloud__swiper-pagination')\r\n\t\t\t.querySelector('.swiper-pagination-bullet-active')\r\n\r\n\t\tif (progressBar) {\r\n\t\t\tprogressBar.style.animationPlayState = 'paused'\r\n\t\t\tprogressBar.classList.add('swiper-pagination-bullet-active-paused')\r\n\t\t}\r\n\t})\r\n\r\n\t// Убираем мышь с `.cloud__swiper`\r\n\titem.addEventListener('mouseleave', function () {\r\n\t\tcloudeIsMouseOverSwiper = false\r\n\r\n\t\tconst progressBar = document\r\n\t\t\t.querySelector('.cloud__swiper-pagination')\r\n\t\t\t.querySelector('.swiper-pagination-bullet-active')\r\n\r\n\t\tif (progressBar) {\r\n\t\t\tprogressBar.style.animationPlayState = 'running'\r\n\t\t\tprogressBar.classList.remove('swiper-pagination-bullet-active-paused')\r\n\t\t}\r\n\t})\r\n})\r\n\r\n// accordion\r\ndocument.querySelectorAll('.accordion__item-top').forEach(itemTop => {\r\n\tconst item = itemTop.parentNode\r\n\r\n\titemTop.addEventListener('click', () => {\r\n\t\tconst content = item.querySelector('.accordion__content')\r\n\r\n\t\tif (item.classList.contains('accordion__item--visible')) {\r\n\t\t\t// Закрытие элемента\r\n\t\t\titem.classList.remove('accordion__item--visible')\r\n\t\t\tcontent.style.height = 0\r\n\t\t\t// toggleButton.textContent = '+' // Меняем знак на \"+\"\r\n\t\t} else {\r\n\t\t\t// Закрываем все открытые элементы\r\n\t\t\tdocument.querySelectorAll('.accordion__item').forEach(i => {\r\n\t\t\t\ti.classList.remove('accordion__item--visible')\r\n\t\t\t\ti.querySelector('.accordion__content').style.height = 0\r\n\t\t\t\t// i.querySelector('.accordion__toggle-button').textContent = '+' // Меняем знак на \"+\"\r\n\t\t\t})\r\n\r\n\t\t\t// Открытие текущего элемента\r\n\t\t\titem.classList.add('accordion__item--visible')\r\n\t\t\tcontent.style.height = content.scrollHeight + 'px'\r\n\t\t\t// toggleButton.textContent = '-' // Меняем знак на \"-\"\r\n\t\t}\r\n\t})\r\n})\r\n\r\n// benefits swiper\r\nconst benefitsSwiper = new Swiper('.benefits__swiper', {\r\n\tspaceBetween: 24, // Промежуток между слайдами в пикселях\r\n\tslidesPerView: 1.3,\r\n\tcenteredSlides: true,\r\n\tloop: true,\r\n\r\n\tpagination: {\r\n\t\tel: '.benefits__swiper-pagination', // Элемент для пагинации\r\n\t\tclickable: true, // Пагинация кликабельна\r\n\t},\r\n\tnavigation: {\r\n\t\tnextEl: '.benefits__swiper-button-next', // Кнопка \"вперёд\"\r\n\t\tprevEl: '.benefits__swiper-button-prev', // Кнопка \"назад\"\r\n\t},\r\n\r\n\tbreakpoints: {\r\n\t\t1281: {\r\n\t\t\tslidesPerView: 4,\r\n\t\t\tcenteredSlides: false,\r\n\t\t},\r\n\r\n\t\t1025: {\r\n\t\t\tspaceBetween: 32, // Промежуток между слайдами в пикселях\r\n\t\t},\r\n\r\n\t\t769: {\r\n\t\t\tspaceBetween: 20, // Промежуток между слайдами в пикселях\r\n\r\n\t\t\tslidesPerView: 1.9,\r\n\t\t},\r\n\t},\r\n\r\n\t// autoplay: {\r\n\t// \tdelay: 5000,\r\n\t// },\r\n})\r\n\r\nbenefitsSwiper.on('slideChange', function () {\r\n\t// Удаляем класс `swiper-pagination-bullet-active-paused` при смене слайда\r\n\tdocument\r\n\t\t.querySelector('.benefits__swiper-pagination')\r\n\t\t.querySelectorAll('.swiper-pagination-bullet-active-paused')\r\n\t\t.forEach(pausedEl => {\r\n\t\t\tpausedEl.classList.remove('swiper-pagination-bullet-active-paused')\r\n\t\t})\r\n\r\n\tconst progressBar = document\r\n\t\t.querySelector('.benefits__swiper-pagination')\r\n\t\t.querySelector('.swiper-pagination-bullet-active')\r\n\r\n\tif (!progressBar) return\r\n\r\n\tprogressBar.addEventListener('animationend', myEndFunction)\r\n\r\n\t// Retrigger Animation on Slide Change\r\n\r\n\tfunction myEndFunction() {\r\n\t\tbenefitsSwiper.slideNext()\r\n\t}\r\n\r\n\t// Перезапуск анимации на новом слайде\r\n\tprogressBar.style.animation = 'none'\r\n\tvoid progressBar.offsetWidth // Триггер Reflow\r\n\tprogressBar.style.animation = null\r\n\r\n\t// Если мышь находится над `.benefits__swiper`, ставим анимацию на паузу\r\n\tif (benefitseIsMouseOverSwiper) {\r\n\t\tprogressBar.style.animationPlayState = 'paused'\r\n\t\tprogressBar.classList.add('swiper-pagination-bullet-active-paused')\r\n\t} else {\r\n\t\tprogressBar.style.animationPlayState = 'running'\r\n\t}\r\n})\r\n\r\n// Флаг для отслеживания состояния мыши\r\nlet benefitseIsMouseOverSwiper = false\r\n\r\n// Наведение мыши на `.benefits__swiper`\r\ndocument.querySelectorAll('.benefits__swiper').forEach(item => {\r\n\titem.addEventListener('mouseenter', function () {\r\n\t\tbenefitseIsMouseOverSwiper = true\r\n\r\n\t\tconst progressBar = document\r\n\t\t\t.querySelector('.benefits__swiper-pagination')\r\n\t\t\t.querySelector('.swiper-pagination-bullet-active')\r\n\r\n\t\tif (progressBar) {\r\n\t\t\tprogressBar.style.animationPlayState = 'paused'\r\n\t\t\tprogressBar.classList.add('swiper-pagination-bullet-active-paused')\r\n\t\t}\r\n\t})\r\n\r\n\t// Убираем мышь с `.benefits__swiper`\r\n\titem.addEventListener('mouseleave', function () {\r\n\t\tbenefitseIsMouseOverSwiper = false\r\n\r\n\t\tconst progressBar = document\r\n\t\t\t.querySelector('.benefits__swiper-pagination')\r\n\t\t\t.querySelector('.swiper-pagination-bullet-active')\r\n\r\n\t\tif (progressBar) {\r\n\t\t\tprogressBar.style.animationPlayState = 'running'\r\n\t\t\tprogressBar.classList.remove('swiper-pagination-bullet-active-paused')\r\n\t\t}\r\n\t})\r\n})\r\n\r\n// benefits swiper\r\nconst newsSwiper = new Swiper('.news__swiper', {\r\n\tspaceBetween: 12, // Промежуток между слайдами в пикселях\r\n\tslidesPerView: 1.2,\r\n\tcenteredSlides: true,\r\n\tloop: true,\r\n\r\n\tpagination: {\r\n\t\tel: '.news__swiper-pagination', // Элемент для пагинации\r\n\t\tclickable: true, // Пагинация кликабельна\r\n\t},\r\n\tnavigation: {\r\n\t\tnextEl: '.news__swiper-button-next', // Кнопка \"вперёд\"\r\n\t\tprevEl: '.news__swiper-button-prev', // Кнопка \"назад\"\r\n\t},\r\n\r\n\tbreakpoints: {\r\n\t\t1025: {\r\n\t\t\tspaceBetween: 32, // Промежуток между слайдами в пикселях\r\n\r\n\t\t\tslidesPerView: 3,\r\n\t\t\tcenteredSlides: false,\r\n\t\t\tnavigation: {\r\n\t\t\t\tnextEl: '.news__swiper-button-next-desktop', // Кнопка \"вперёд\"\r\n\t\t\t\tprevEl: '.news__swiper-button-prev-desktop', // Кнопка \"назад\"\r\n\t\t\t},\r\n\t\t},\r\n\r\n\t\t769: {\r\n\t\t\tspaceBetween: 20, // Промежуток между слайдами в пикселях\r\n\r\n\t\t\tslidesPerView: 2.5,\r\n\t\t},\r\n\t},\r\n})\r\n\r\nnewsSwiper.on('slideChange', function () {\r\n\t// Удаляем класс `swiper-pagination-bullet-active-paused` при смене слайда\r\n\tdocument\r\n\t\t.querySelector('.news__swiper-pagination')\r\n\t\t.querySelectorAll('.swiper-pagination-bullet-active-paused')\r\n\t\t.forEach(pausedEl => {\r\n\t\t\tpausedEl.classList.remove('swiper-pagination-bullet-active-paused')\r\n\t\t})\r\n\r\n\tconst progressBar = document\r\n\t\t.querySelector('.news__swiper-pagination')\r\n\t\t.querySelector('.swiper-pagination-bullet-active')\r\n\r\n\tif (!progressBar) return\r\n\r\n\tprogressBar.addEventListener('animationend', myEndFunction)\r\n\r\n\t// Retrigger Animation on Slide Change\r\n\r\n\tfunction myEndFunction() {\r\n\t\tnewsSwiper.slideNext()\r\n\t}\r\n\r\n\t// Перезапуск анимации на новом слайде\r\n\tprogressBar.style.animation = 'none'\r\n\tvoid progressBar.offsetWidth // Триггер Reflow\r\n\tprogressBar.style.animation = null\r\n\r\n\t// Если мышь находится над `.news__swiper`, ставим анимацию на паузу\r\n\tif (newseIsMouseOverSwiper) {\r\n\t\tprogressBar.style.animationPlayState = 'paused'\r\n\t\tprogressBar.classList.add('swiper-pagination-bullet-active-paused')\r\n\t} else {\r\n\t\tprogressBar.style.animationPlayState = 'running'\r\n\t}\r\n})\r\n\r\n// Флаг для отслеживания состояния мыши\r\nlet newseIsMouseOverSwiper = false\r\n\r\n// Наведение мыши на `.news__swiper`\r\ndocument.querySelectorAll('.news__swiper').forEach(item => {\r\n\titem.addEventListener('mouseenter', function () {\r\n\t\tnewseIsMouseOverSwiper = true\r\n\r\n\t\tconst progressBar = document\r\n\t\t\t.querySelector('.news__swiper-pagination')\r\n\t\t\t.querySelector('.swiper-pagination-bullet-active')\r\n\r\n\t\tif (progressBar) {\r\n\t\t\tprogressBar.style.animationPlayState = 'paused'\r\n\t\t\tprogressBar.classList.add('swiper-pagination-bullet-active-paused')\r\n\t\t}\r\n\t})\r\n\r\n\t// Убираем мышь с `.news__swiper`\r\n\titem.addEventListener('mouseleave', function () {\r\n\t\tnewseIsMouseOverSwiper = false\r\n\r\n\t\tconst progressBar = document\r\n\t\t\t.querySelector('.news__swiper-pagination')\r\n\t\t\t.querySelector('.swiper-pagination-bullet-active')\r\n\r\n\t\tif (progressBar) {\r\n\t\t\tprogressBar.style.animationPlayState = 'running'\r\n\t\t\tprogressBar.classList.remove('swiper-pagination-bullet-active-paused')\r\n\t\t}\r\n\t})\r\n})\r\n\r\nconst telInput = document.querySelector('#phone')\r\n\r\nconst iti = window.intlTelInput(telInput, {\r\n\tinitialCountry: 'ua', // Устанавливаем Украину как страну по умолчанию\r\n\tseparateDialCode: false, // Код страны не отображается отдельно\r\n\tformatOnDisplay: true, // Форматирование номера при отображении\r\n\tnationalMode: false, // Использовать только международный формат\r\n\tgeoIpLookup: function (callback) {\r\n\t\tfetch('https://ipinfo.io?token=your_token', { method: 'GET' })\r\n\t\t\t.then(response => response.json())\r\n\t\t\t.then(data => {\r\n\t\t\t\tconst countryCode = data && data.country ? data.country : ''\r\n\t\t\t\tcallback(countryCode) // Вызов callback с кодом страны\r\n\t\t\t})\r\n\t\t\t.catch(error => console.error('GeoIP lookup failed:', error))\r\n\t},\r\n\tutilsScript:\r\n\t\t'https://cdnjs.cloudflare.com/ajax/libs/intl-tel-input/12.0.3/js/utils.js', // Скрипт для валидации\r\n\tpreferredCountries: [], // Страны, которые отображаются в верхней части списка\r\n})\r\n\r\n// Устанавливаем номер с кодом страны\r\niti.setNumber('+380') // Пример номера для Украины с кодом страны\r\n\r\n// Функция для сброса и восстановления номера\r\nfunction resetIntlTelInput() {\r\n\tif (typeof intlTelInputUtils !== 'undefined') {\r\n\t\tconst currentText = iti.getNumber(intlTelInputUtils.numberFormat.E164)\r\n\t\tif (typeof currentText === 'string') {\r\n\t\t\titi.setNumber(currentText) // Восстановление номера с автоматическим форматированием\r\n\t\t}\r\n\t}\r\n}\r\nconst form = document.querySelector('.contact__form')\r\nconst contactValidationText = document.querySelector(\r\n\t'.contact__validation-text'\r\n)\r\n\r\nconst phoneInput = form.querySelector('input[type=\"tel\"]')\r\nif (phoneInput) {\r\n\tphoneInput.addEventListener('keypress', function (e) {\r\n\t\t// Разрешённые символы: цифры, +, -, (, ), пробел\r\n\t\tconst allowedChars = /[0-9\\+\\-\\(\\)\\s]/\r\n\t\tif (!allowedChars.test(e.key)) {\r\n\t\t\te.preventDefault() // Блокируем ввод запрещённого символа\r\n\t\t}\r\n\t})\r\n}\r\n\r\nform.addEventListener('submit', function (e) {\r\n\te.preventDefault()\r\n\r\n\tlet isValid = true // Флаг валидности формы\r\n\r\n\t// Получение всех полей ввода\r\n\tconst inputs = form.querySelectorAll(\r\n\t\t'input[type=\"text\"], input[type=\"tel\"], textarea, input[type=\"email\"]'\r\n\t)\r\n\r\n\tinputs.forEach(input => {\r\n\t\t// Проверка на пустоту поля\r\n\t\tif (!input.value.trim()) {\r\n\t\t\tisValid = false\r\n\t\t\tinput.style.borderColor = 'red' // Изменение цвета рамки\r\n\t\t} else {\r\n\t\t\tinput.style.borderColor = 'green' // Вернуть цвет рамки в норму\r\n\t\t}\r\n\t})\r\n\r\n\t// Дополнительная проверка email\r\n\tconst emailInput = form.querySelector('input[type=\"email\"]')\r\n\tif (emailInput) {\r\n\t\tconst emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/ // Регулярное выражение для проверки email\r\n\t\tif (!emailRegex.test(emailInput.value)) {\r\n\t\t\tisValid = false\r\n\t\t\temailInput.style.borderColor = 'red'\r\n\t\t} else {\r\n\t\t\temailInput.style.borderColor = 'green'\r\n\t\t}\r\n\t}\r\n\r\n\t// Дополнительная проверка телефона с использованием intl-tel-input\r\n\tif (phoneInput && !iti.isValidNumber()) {\r\n\t\tisValid = false\r\n\t\tphoneInput.style.borderColor = 'red'\r\n\t}\r\n\r\n\t// Если форма не валидна, выводим сообщение и прекращаем отправку\r\n\tif (!isValid) {\r\n\t\talert('Please fill out all fields correctly.')\r\n\t\tcontactValidationText.classList.add('contact__validation-text--visible')\r\n\t\treturn\r\n\t}\r\n\r\n\t// Если форма валидна, обработка отправки\r\n\talert('Form submitted successfully!')\r\n\tform.reset() // Очистка формы\r\n\r\n\t// Сбрасываем стиль границ после успешной отправки\r\n\tcontactValidationText.classList.remove('contact__validation-text--visible')\r\n\tinputs.forEach(input => {\r\n\t\tinput.style.borderColor = ''\r\n\t})\r\n})\r\n\r\n// заглушка\r\n\r\nconst chooseOrderButtons = document.querySelectorAll('.choose__order-button')\r\n\r\nchooseOrderButtons.forEach(chooseOrderButton => {\r\n\tchooseOrderButton.addEventListener('click', e => {\r\n\t\te.stopPropagation()\r\n\t})\r\n})\r\n\r\n// choose filters\r\nconst filterButtons = document.querySelectorAll('.choose__filter')\r\n\r\nconst filterButtonClick = button => {\r\n\tfilterButtons.forEach(button => {\r\n\t\tbutton.classList.remove('choose__filter--active')\r\n\t})\r\n\tbutton.classList.add('choose__filter--active')\r\n}\r\n\r\nfilterButtons.forEach(button => {\r\n\tbutton.addEventListener('click', () => {\r\n\t\tfilterButtonClick(button)\r\n\t})\r\n})\r\n\r\nconst filters = document.querySelectorAll('.choose__filter')\r\nconst items = document.querySelectorAll('.choose__accordion')\r\n\r\n// Функция для обновления видимости элементов в зависимости от активного фильтра\r\nconst updateItemsVisibility = () => {\r\n\tconst activeFilter = document.querySelector('.choose__filter--active')\r\n\tconst filterType = activeFilter\r\n\t\t? activeFilter.getAttribute('data-filter')\r\n\t\t: ''\r\n\r\n\titems.forEach(item => {\r\n\t\tif (item.getAttribute('data-type') === filterType || filterType === '') {\r\n\t\t\titem.classList.remove('hidden')\r\n\t\t\titem.style.display = '' // Восстанавливаем отображение\r\n\t\t} else {\r\n\t\t\titem.classList.add('hidden')\r\n\t\t\t// setTimeout(() => {\r\n\t\t\t// \titem.style.display = 'none'\r\n\t\t\t// }, 400) // Длительность анимации\r\n\t\t}\r\n\t})\r\n}\r\n\r\n// Обработка кликов по фильтрам\r\nfilters.forEach(filter => {\r\n\tfilter.addEventListener('click', () => {\r\n\t\t// Убираем активный класс у всех кнопок\r\n\t\tfilters.forEach(btn => btn.classList.remove('choose__filter--active'))\r\n\t\t// Добавляем активный класс текущей кнопке\r\n\t\tfilter.classList.add('choose__filter--active')\r\n\t\t// Обновляем видимость элементов\r\n\t\tupdateItemsVisibility()\r\n\t})\r\n})\r\n\r\n// Инициализация страницы в зависимости от активного фильтра\r\nupdateItemsVisibility()\r\n\r\n// burger\r\nconst burger = document.querySelector('.burger')\r\nconst burgerButton = document.querySelector('.burger__button')\r\nconst burgerMenu = document.querySelector('.burger-menu')\r\nconst burgerTransitionTime = 700\r\n\r\nburger.addEventListener('click', () => {\r\n\tif (burgerButton.classList.contains('burger__button--open')) {\r\n\t\tdocument.body.classList.add('overflow-hidden')\r\n\t\tburgerMenu.classList.add('z2')\r\n\t\tburgerMenu.classList.remove('z-1')\r\n\t\tburgerMenu.classList.add('burger-menu--open')\r\n\t\tburgerButton.classList.remove('burger__button--open')\r\n\t\tburgerButton.classList.add('burger__button--close')\r\n\t} else {\r\n\t\tburgerMenu.classList.remove('burger-menu--open')\r\n\t\tburgerButton.classList.add('burger__button--open')\r\n\t\tburgerButton.classList.remove('burger__button--close')\r\n\t\tdocument.body.classList.remove('overflow-hidden')\r\n\r\n\t\tsetTimeout(() => {\r\n\t\t\tburgerMenu.classList.remove('z2')\r\n\t\t\tburgerMenu.classList.add('z-1')\r\n\t\t}, burgerTransitionTime)\r\n\t}\r\n})\r\n\r\nconst burgerMenuLinks = document.querySelectorAll('.burger-menu__link')\r\n\r\nburgerMenuLinks.forEach(link => {\r\n\tlink.addEventListener('click', () => {\r\n\t\tburgerMenu.classList.remove('burger-menu--open')\r\n\t\tburgerButton.classList.add('burger__button--open')\r\n\t\tburgerButton.classList.remove('burger__button--close')\r\n\t\tdocument.body.classList.remove('overflow-hidden')\r\n\r\n\t\tsetTimeout(() => {\r\n\t\t\tburgerMenu.classList.remove('z2')\r\n\t\t\tburgerMenu.classList.add('z-1')\r\n\t\t}, burgerTransitionTime)\r\n\t})\r\n})\r\n\n\n//# sourceURL=webpack://webdream/./src/assets/js/app.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/assets/js/app.js"]();
/******/ 	
/******/ })()
;